xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
View(outlier.res)
view(outlier.res)
names(outlier.res)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% (outlier.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ifelse(Id %in% (outlier.res), Id,""))
ifelse(Id %in% (outlier.res), Id,"")
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% outlier.res, Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred.train, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% outlier.res, Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% outlier.res, Id,"")), vjust=1.5, col = "red") +
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% outlier.res, Id,"")), vjust=1.5, col = "red")
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% (outlier.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
outlier <- ifelse(Id %in% (outlier.res), Id,"")
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = outlier, vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = outlier), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
outlier <- ifelse(Id %in% (outlier.res), Id,)
outlier <- ifelse(Id %in% (outlier.res), Id, )
rm(outlier)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = outlier.res), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = outlier.res), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = "outlier.res"), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(mapping = aes(label = ifelse(Id %in% (outlier.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = ifelse(Id %in% (outlier.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
View(hp.plot)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = ifelse(Id %in% (outlier.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
pred.train <- predict(model_Ensemble, newdata=subset(train, select=-c(Id, SalePrice)))
hp.plot <- hp %>%
filter(!is.na(SalePrice))
hp.plot$pred <- pred.train
hp.plot <- hp.plot %>%
mutate(residual = log(SalePrice)-pred)
outlier.res <- hp.plot %>%
select(Id, residual) %>%
filter(abs(residual) > 0.2)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% (outlier.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = Id)), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = Id)), vjust=1.5, col = "red")
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = Id), vjust=1.5, col = "red")
pred.train <- predict(model_Ensemble, newdata=subset(train, select=-c(Id, SalePrice)))
hp.plot <- hp %>%
filter(!is.na(SalePrice))
hp.plot$pred <- pred.train
hp.plot <- hp.plot %>%
mutate(residual = log(SalePrice)-pred)
outlier.res <- hp.plot %>%
select(Id, residual) %>%
filter(abs(residual) > 0.2)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = Id), vjust=1.5, col = "red")
attach(hp.plot)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = Id), vjust=1.5, col = "red")
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data=outlier.res, mapping = aes(label = outlier.res$Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = outlier.res$Id)), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = outlier.res$Id)), vjust=1.5, col = "red") +
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = outlier.res$Id), vjust=1.5, col = "red")
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = outlier.res, aes(label = outlier.res$Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual) > 0.2], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
?abs
View(outlier.res)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[residual > -0.2], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
Outliers.res <- hp.plot[residual <= -0.2 | residual >= 0.2,Id]
Outliers.res <- hp.plot[,residual <= -0.2 | residual >= 0.2,Id]
Outliers.res <- hp.plot[residual <= -0.2 | residual >= 0.2,Id,]
Outliers.res <- hp.plot %>%
select( residual <= -0.2 | residual >= 0.2,Id)
Outliers.res <- hp.plot %>%
select(select,Id) %>%
filter(residual <= -0.2 | residual >= 0.2)
Outliers.res <- hp.plot %>%
select(residual,Id) %>%
filter(residual <= -0.2 | residual >= 0.2)
View(Outliers.res)
View(outlier.res)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% (outliers.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% (Outliers.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data =hp.plot, mapping=aes(label = ifelse(Id %in% (Outliers.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
rm(Outliers.res)
View(outlier.res)
outlier.res <- hp.plot %>%
select(residual, Id) %>%
filter(abs(residual) > 0.2)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(aes(label = ifelse(Id %in% (outlier.res), Id,"")), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
View(outlier.res)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual() > -0.2,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual > 0.2,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual) > 0.2,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9)
)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual) > 0.3,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
gggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual) > 0.3,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual) > 0.3,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
pred <- predict(model_Ensemble, newdata=subset(test, select=-c(Id, SalePrice)))
result <- data.frame('Id'=hp[is.na(SalePrice), 1], 'SalePrice'=exp(pred))
result <- data.frame('Id'= hp[is.na(SalePrice), 1], 'SalePrice'=exp(pred))
hp[is.na(SalePrice)
]
View(test)
hp[is.na(SalePrice)
]
hp[is.na(SalePrice), 1]
View(params)
glimpse(hp)
skimr(hp)
skim(hp)
is.na(hp)
str(hp)
hp[is.na(SalePrice), 1]
sum(is.na(hp$SalePrice))
hp[is.na(SalePrice), 1]
result <- data.frame('Id'= hp[is.na(SalePrice), 1], 'SalePrice'=exp(pred))
names(hp)
hp[is.na(SalePrice), 2]
hp[is.na(SalePrice), 1]
hp[is.na(SalePrice), 3]
hp[is.na(SalePrice), 4]
hp[is.na(SalePrice), 5]
hp[is.na(SalePrice), 6]
names(hp_test)
names(hp[is.na(SalePrice), 1])
hp[is.na(SalePrice), 1]
result <- data.frame('Id'= hp_test$Id, 'SalePrice'=exp(pred))
write.csv(result, file="final pred.csv", row.names = F)
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual) > 0.25,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual) > 0.2,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
ggplot(hp.plot, aes(x = pred, y = residual)) +
geom_pointrange(aes(ymin = 0, ymax = residual)) +
geom_hline(yintercept = 0, linetype = 3) +
geom_text(data = hp.plot[abs(residual) > 0.25,], aes(label = Id), vjust=1.5, col = "red") +
ggtitle("Residuals vs. model prediction") +
xlab("prediction") +
ylab("residual") +
theme(text = element_text(size=9))
hp <- hp[c(-463,-524,-633,-1299,-1325,-31,-971),]
hp_train <- hp[!is.na(SalePrice),]
hp_test <- hp[is.na(SalePrice),]
rm(llist = ls())
rm(list = ls())
library("tidyverse")
library("caret")
library("caretEnsemble")
library("kernlab")
library("Matrix")
library("skimr")
library("recipes")
library("xgboost")
# Load data
db1 <- read.csv('train.csv')
db2 <- read.csv('test.csv')
db2$SalePrice <- as.integer(NA)
hp <- rbind(db1, db2)
remove(db1); remove(db2)
hp <- hp %>%
mutate(MSSubClass = factor(MSSubClass))
# Fix variable name starts with number
names(hp)[44:45] <- c("FirstFLSF","SecFLSF")
names(hp)[70] <- c("ThreeSnPorch")
# Fix typos in factorial levels
library(forcats)
count(hp, RoofMatl)
hp <- hp %>%
mutate(RoofMatl = fct_collapse(RoofMatl, "TarGrv" = "Tar&Grv"))
count(hp, Exterior1st)
hp <- hp %>%
mutate(Exterior1st = fct_collapse(Exterior1st, "WdSdng" = "Wd Sdng"))
count(hp, Exterior2nd)
hp <- hp %>%
mutate(Exterior2nd = fct_collapse(Exterior2nd, "BrkComm" = "Brk Cmn", "WdSdng" = "Wd Sdng", "WdShng" = "Wd Shng"))
# Fix typo of GarageYrBlt
summary(hp$GarageYrBlt)
hp <- hp %>%
mutate(GarageYrBlt = ifelse(GarageYrBlt > 2010, 2007, GarageYrBlt))
ggplot(hp, aes(x=GrLivArea, y=SalePrice)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
geom_text(data=hp[GrLivArea>4500,], mapping=aes(label=Id), vjust=1.5, col = "blue") +
xlab("above grade living area") +
ylab("sale price")
hp <- hp[c(-463,-524,-633,-1299,-1325,-31,-971),]
hp <- hp  %>%
mutate(withBsmt = as.numeric(TotalBsmtSF!=0),
with2ndFloor= as.numeric(SecFLSF>0),
withPool = as.numeric(PoolArea!=0),
withPorch = as.numeric((OpenPorchSF+EnclosedPorch+ThreeSnPorch+ScreenPorch)!=0),
hasRemod = as.numeric(YearRemodAdd != YearBuilt),
withFireplace = as.numeric(Fireplaces >0),
isNew = as.numeric(YrSold == YearBuilt),
totalSF = GrLivArea + TotalBsmtSF,
totalBath = FullBath + 0.5*HalfBath + 0.5*BsmtHalfBath + BsmtFullBath,
age = YrSold - YearRemodAdd,
yearsRemodeled = ifelse(YearRemodAdd == YearBuilt, YrSold < YearRemodAdd, 0),
YrSold = factor(YrSold),
MoSold = factor(MoSold),
totalPorchSF = OpenPorchSF + EnclosedPorch + ThreeSnPorch + ScreenPorch,
withbsmtBath = as.numeric(BsmtHalfBath + BsmtFullBath!=0),
isBsmtUnf = as.numeric(TotalBsmtSF == BsmtUnfSF)
)
hp_train <- hp[!is.na(SalePrice),]
hp_test <- hp[is.na(SalePrice),]
db2$SalePrice <- as.integer(NA)
db1 <- read.csv('train.csv')
db2 <- read.csv('test.csv')
db2$SalePrice <- as.integer(NA)
hp <- rbind(db1, db2)
sum(is,na(hp))
sum(is.na(hp))
sum(is.na(hp$SalePrice))
remove(db1); remove(db2)
hp <- hp %>%
mutate(MSSubClass = factor(MSSubClass))
# Fix variable name starts with number
names(hp)[44:45] <- c("FirstFLSF","SecFLSF")
names(hp)[70] <- c("ThreeSnPorch")
# Fix typos in factorial levels
library(forcats)
count(hp, RoofMatl)
hp <- hp %>%
mutate(RoofMatl = fct_collapse(RoofMatl, "TarGrv" = "Tar&Grv"))
count(hp, Exterior1st)
hp <- hp %>%
mutate(Exterior1st = fct_collapse(Exterior1st, "WdSdng" = "Wd Sdng"))
count(hp, Exterior2nd)
hp <- hp %>%
mutate(Exterior2nd = fct_collapse(Exterior2nd, "BrkComm" = "Brk Cmn", "WdSdng" = "Wd Sdng", "WdShng" = "Wd Shng"))
# Fix typo of GarageYrBlt
summary(hp$GarageYrBlt)
hp <- hp %>%
mutate(GarageYrBlt = ifelse(GarageYrBlt > 2010, 2007, GarageYrBlt))
# remove Outliers
ggplot(hp, aes(x=GrLivArea, y=SalePrice)) +
geom_point() +
geom_smooth(method=lm, se=FALSE) +
geom_text(data=hp[GrLivArea>4500,], mapping=aes(label=Id), vjust=1.5, col = "blue") +
xlab("above grade living area") +
ylab("sale price")
hp <- hp[c(-463,-524,-633,-1299,-1325,-31,-971),]
# Feature engineering
hp <- hp  %>%
mutate(withBsmt = as.numeric(TotalBsmtSF!=0),
with2ndFloor= as.numeric(SecFLSF>0),
withPool = as.numeric(PoolArea!=0),
withPorch = as.numeric((OpenPorchSF+EnclosedPorch+ThreeSnPorch+ScreenPorch)!=0),
hasRemod = as.numeric(YearRemodAdd != YearBuilt),
withFireplace = as.numeric(Fireplaces >0),
isNew = as.numeric(YrSold == YearBuilt),
totalSF = GrLivArea + TotalBsmtSF,
totalBath = FullBath + 0.5*HalfBath + 0.5*BsmtHalfBath + BsmtFullBath,
age = YrSold - YearRemodAdd,
yearsRemodeled = ifelse(YearRemodAdd == YearBuilt, YrSold < YearRemodAdd, 0),
YrSold = factor(YrSold),
MoSold = factor(MoSold),
totalPorchSF = OpenPorchSF + EnclosedPorch + ThreeSnPorch + ScreenPorch,
withbsmtBath = as.numeric(BsmtHalfBath + BsmtFullBath!=0),
isBsmtUnf = as.numeric(TotalBsmtSF == BsmtUnfSF)
)
# Data preprocessing - Use recipe to do preprocessing
hp_train <- hp[!is.na(SalePrice),]
hp_test <- hp[is.na(SalePrice),]
